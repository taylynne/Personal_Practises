# Project Euler
# Even Fibonacci numbers
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# I think... I think I over thought this one out. The answer provided with this, is not correct.
# I think I need to do the actual fibonacci numbers, and only add the even numbers
# so this code... may end up being useful..
#
# num = 6
# newnum = 4
#
# while num < 4000000 or newnum < 4000000:
#     newnum = newnum + num
#     num = num + newnum
#
# print(num)
# print(newnum)


num = 3
newnum = 2
evenNum = [2,]
sum = 0

while num < 4000000 or newnum < 4000000:
    newnum = newnum + num
    num = num + newnum
    if num % 2 == 0:
        evenNum.append(num)
    if newnum % 2 == 0:
        evenNum.append(newnum)

print(num)
print(newnum)
print(evenNum)

for number in evenNum:
    sum = sum + number

# THIS WILL BE WRONG!!!!
# For whatever reason, the while loop continues to go until almost 15 million!
# and because of that, the last item in the list is 14 million.
# so the correct number is 4613732
# which I got by subtracting the 14 million number from the sum that is printed.

print(sum)


# Looking at the thread for this problem, here is someone else's python solution:
# https://projecteuler.net/thread=2
# def calcE():
# 	x = y = 1
# 	sum = 0
# 	while (sum < 1000000):
# 		sum += (x + y)
# 		x, y = x + 2 * y, 2 * x + 3 * y
# 	return sum
#
# Logic behind it:
#
# This may be a small improvement.  The Fibonacci series is:
# 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610...
# Now, replacing an odd number with O and an even with E, we get:
# O, O, E, O, O, E, O, O, E, O, O, E, O, O, E...
# And so each third number is even.  We don't need to calculate the odd numbers.
# Starting from an two odd terms x, y, the series is:
# x, y, x + y, x + 2y, 2x + 3y, 3x + 5y
#
# clever I think...